PHASES

then based on distances between diffent points (O(n^2)) we check that whether they are in the same cluster or nt. If they are we assign them the same class identifier 
otherwise differnt. Finally we traverse through the map and find maximum number of points that are assigned the same identifier. So complexity of this code is O(n^2).
In the third program we are takin gthis generated output as input and take this in an adjacency list (map<int,set<int> >) and a current graph(map<int,string>). Then we use
Guha-Khuller Algorithm to construct a CDS. After constructing the CDS we fail its dominant elements one by one and check whether it leads to a disconnected graph. If it does 
we don't fail it (because of the assumptions we have taken). Otherwise we fail it and calculate the number of non-dominators which convert to dominators. We stop when the
required number of failures is reached.